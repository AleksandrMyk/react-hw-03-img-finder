{"version":3,"sources":["components/imagegallery/Imagegallery.module.css","components/button/Button.module.css","components/searchbar/Searchbar.module.css","components/api/imgApi.js","components/searchbar/Searchbar.js","components/imageGalleyItems/ImageGalleryItems.js","components/imagegallery/Imagegallery.js","components/button/Button.js","components/spinner/Spinner.js","components/modal/Modal.js","App.js","index.js","components/imageGalleyItems/ImageGalleryItems.module.css","components/modal/Modal.module.css"],"names":["module","exports","query","page","key","axios","get","then","response","data","hits","Searchbar","state","inputQuery","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","className","style","SearchForm","this","type","SearchFormButton","SearchormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItems","url","alt","getOpenModal","ImageGalleryItem","items","src","onClick","ImageGallery","gallery","map","id","webformatURL","largeImageURL","tags","Button","Spinner","color","height","width","Modal","closeOnEscape","code","onClose","handelCloseModal","currentTarget","window","addEventListener","removeEventListener","Overlay","App","loading","error","loadMoreQuery","isModalOpen","modalUrl","fetchImg","imgGalleryApi","prevState","catch","finally","handleSearchFormSubmit","openModal","bigImg","dataset","modal","closeModal","handelModalUrl","prevProps","prevQuery","nextQuery","length","setTimeout","scrollTo","top","document","documentElement","scrollHeight","behavior","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9410429b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"Imagegallery_ImageGallery__2522p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__6y_BM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1BKQL\",\"SearchForm\":\"Searchbar_SearchForm__2seKT\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1EAWj\",\"SearchormButtonLabel\":\"Searchbar_SearchormButtonLabel__3QB8g\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1gBba\"};","import axios from 'axios';\r\n\r\nconst imgApi = (query, page = 0) => {\r\n  const key = '16836748-77bdb9d8e6a7ff11ccb0a1780';\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${query}&${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\nexport default {\r\n  imgApi,\r\n};\r\n","import React, { Component } from 'react';\r\nimport style from './Searchbar.module.css';\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    inputQuery: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ inputQuery: e.target.value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.inputQuery);\r\n    this.setState({ inputQuery: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className={style.Searchbar}>\r\n        <form className={style.SearchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={style.SearchFormButton}>\r\n            <span className={style.SearchormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={style.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.inputQuery}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './ImageGalleryItems.module.css';\r\n\r\nconst ImageGalleryItems = ({ url, alt, getOpenModal }) => {\r\n  return (\r\n    <>\r\n      <li className={style.ImageGalleryItem}>\r\n        <img\r\n          className={style.items}\r\n          src={url}\r\n          alt={alt}\r\n          onClick={getOpenModal}\r\n        ></img>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nImageGalleryItems.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  getOpenModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItems;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Imagegallery.module.css';\r\nimport ImageGalleryItems from '../imageGalleyItems/ImageGalleryItems';\r\n\r\nconst ImageGallery = ({ gallery, getOpenModal }) => {\r\n  return (\r\n    <>\r\n      <ul className={style.ImageGallery}>\r\n        {gallery.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n          <ImageGalleryItems\r\n            key={id}\r\n            url={webformatURL}\r\n            getOpenModal={() => getOpenModal(largeImageURL)}\r\n            alt={tags}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\nImageGallery.propTypes = {\r\n  getOpenModal: PropTypes.func.isRequired,\r\n  gallery: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport style from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <>\r\n      <button className={style.Button} type=\"button\" onClick={onClick}>\r\n        Load more\r\n      </button>\r\n    </>\r\n  );\r\n};\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\nexport default Button;\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nconst Spinner = () => {\r\n  return <Loader type=\"Bars\" color=\"#00BFFF\" height={120} width={120} />;\r\n};\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\r\nimport pt from 'prop-types';\r\nimport style from './Modal.module.css';\r\n\r\nclass Modal extends Component {\r\n  static propTypes = {\r\n    onClose: pt.func.isRequired,\r\n    src: pt.string.isRequired,\r\n  };\r\n\r\n  state = {};\r\n\r\n  componentWillMount() {\r\n    window.addEventListener('keydown', this.closeOnEscape);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.closeOnEscape);\r\n  }\r\n\r\n  closeOnEscape = e => {\r\n    if (e.code !== 'Escape') {\r\n      return;\r\n    }\r\n    const { onClose } = this.props;\r\n    onClose();\r\n  };\r\n\r\n  handelCloseModal = e => {\r\n    if (e.target !== e.currentTarget) {\r\n      return;\r\n    }\r\n    const { onClose } = this.props;\r\n    onClose();\r\n  };\r\n\r\n  render() {\r\n    const { src } = this.props;\r\n    return (\r\n      <div className={style.Overlay} onClick={this.handelCloseModal}>\r\n        <div className={style.Modal}>\r\n          <img src={src} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport imgGalleryApi from './components/api/imgApi';\r\nimport Searchbar from './components/searchbar/Searchbar';\r\nimport ImageGallery from './components/imagegallery/Imagegallery';\r\nimport Button from './components/button/Button';\r\nimport Spinner from './components/spinner/Spinner';\r\nimport Modal from './components/modal/Modal';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    gallery: [],\r\n    loading: false,\r\n    error: null,\r\n    loadMoreQuery: '',\r\n    page: 0,\r\n    isModalOpen: false,\r\n    modalUrl: '',\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevQuery = prevState.loadMoreQuery;\r\n    const nextQuery = this.state.loadMoreQuery;\r\n    if (prevQuery !== nextQuery) {\r\n      this.fetchImg(nextQuery);\r\n    }\r\n    if (\r\n      prevState.gallery !== this.state.gallery ||\r\n      this.state.gallery.length > 12\r\n    ) {\r\n      setTimeout(() => {\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n      }, 500);\r\n    }\r\n  }\r\n  fetchImg = () => {\r\n    const { loadMoreQuery, page } = this.state;\r\n    this.setState({ loading: true });\r\n    imgGalleryApi\r\n      .imgApi(loadMoreQuery, page)\r\n      .then(gallery =>\r\n        this.setState(prevState => ({\r\n          gallery: [...prevState.gallery, ...gallery],\r\n          page: prevState.page + 1,\r\n        })),\r\n      )\r\n      .catch(error => this.setState({ error }))\r\n      .finally(() => this.setState({ loading: false }));\r\n  };\r\n\r\n  handleSearchFormSubmit = query => {\r\n    this.setState({\r\n      loadMoreQuery: query,\r\n      page: 0,\r\n      gallery: [],\r\n    });\r\n  };\r\n\r\n  openModal = e => {\r\n    const bigImg = e.target.dataset.modal;\r\n    this.setState({ isModalOpen: true, modalUrl: bigImg });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ isModalOpen: false, modalUrl: '' });\r\n  };\r\n\r\n  handelModalUrl = url => {\r\n    this.setState({ modalUrl: url, isModalOpen: true });\r\n  };\r\n  render() {\r\n    const { gallery, loading, isModalOpen, modalUrl } = this.state;\r\n    return (\r\n      <div>\r\n        <Searchbar onSubmit={this.handleSearchFormSubmit} />\r\n        <ImageGallery gallery={gallery} getOpenModal={this.handelModalUrl} />\r\n        {loading && <Spinner />}\r\n        {isModalOpen && <Modal src={modalUrl} onClose={this.closeModal} />}\r\n        {gallery.length > 0 && !loading && <Button onClick={this.fetchImg} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import './base.css';\r\nimport ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport App from './App';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItems_ImageGalleryItem__3nNXe\",\"items\":\"ImageGalleryItems_items__25bU8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__fWCbr\",\"Modal\":\"Modal_Modal__2FKmy\"};"],"sourceRoot":""}